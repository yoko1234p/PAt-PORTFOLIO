@tailwind base;
@tailwind components;
@tailwind utilities;

@import 'aos/dist/aos.css';

:root {
  --bg-base: #FFFFFF;
  --bg-secondary: #F8F9FA;
}

html {
  /* Create a snapping rule on the html element */
  scroll-snap-type: y mandatory;
  scroll-behavior: smooth;
  scroll-padding: 0;
  /* Create a timeline scope for scroll-driven animations */
  timeline-scope: --section;
  /* Hide scrollbar */
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
  /* Prevent overscroll */
  overscroll-behavior-y: contain;
  /* Improve scrolling smoothness */
  -webkit-overflow-scrolling: touch;
}

@media (prefers-reduced-motion: no-preference) {
  html {
    scroll-behavior: smooth;
  }
}

html::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}

body {
  color: #1D1D1F;
  background: #0c4566;
  font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'SF Pro Text', 'Helvetica Neue', system-ui, sans-serif;
  overflow-x: hidden;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  cursor: none;
  /* Prevent overscroll */
  overscroll-behavior-y: contain;
  position: relative;
}

/* Show default cursor on interactive elements */
a,
button,
input,
textarea,
select {
  cursor: none;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@layer components {
  .transition-smooth {
    transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);
  }

  /* Scroll Snap Section */
  .snap-section {
    /* Creating a snapping rule on the section element */
    scroll-snap-align: center;
    scroll-snap-stop: always;

    /* Attach the timeline to the section element */
    view-timeline: --section;

    /* Set each section to the full viewport height */
    min-height: 100vh;
    height: 100vh;
    position: relative;

    /* Smooth transitions */
    transition: transform 0.6s cubic-bezier(0.65, 0, 0.35, 1),
                opacity 0.6s cubic-bezier(0.65, 0, 0.35, 1);

    /* Stacking context - later sections appear under earlier ones */
    &:nth-of-type(1) { z-index: 6; }
    &:nth-of-type(2) { z-index: 5; }
    &:nth-of-type(3) { z-index: 4; }
    &:nth-of-type(4) { z-index: 3; }
    &:nth-of-type(5) { z-index: 2; }
    &:nth-of-type(6) { z-index: 1; }

    /* First section should be at the top */
    &:first-of-type {
      scroll-snap-align: start;
    }

    /* Last section (contact) should allow scrolling to footer */
    &:last-of-type {
      height: auto;
      min-height: 100vh;
    }
  }

  /* Fixed content that animates */
  .snap-content {
    /* Fix the content, so it doesn't scroll with the section */
    position: fixed;
    inset: 0;
    overflow: hidden;

    /* Animate the content based on the section scrolling */
    animation: slideIn ease-out both;
    animation-timeline: --section;

    /* Additional smooth transitions */
    transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1),
                transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Contact section needs different positioning to show footer */
  .snap-section:last-of-type .snap-content {
    position: relative;
    height: auto;
    min-height: 100vh;
    inset: unset;
  }

  /* Slide in animation */
  @keyframes slideIn {
    0% {
      opacity: 0;
      visibility: hidden;
      transform: translateY(8%) scale(0.98);
    }

    5% {
      opacity: 0.3;
      visibility: visible;
    }

    15% {
      opacity: 1;
      visibility: visible;
      transform: translateY(0) scale(1);
    }

    85% {
      opacity: 1;
      visibility: visible;
      transform: translateY(0) scale(1);
    }

    95% {
      opacity: 0.3;
      visibility: visible;
    }

    100% {
      opacity: 0;
      visibility: hidden;
      transform: translateY(-8%) scale(0.98);
    }
  }

  /* Glow Card Effect */
  .glow-card {
    --glow-sens: 5;
    --color-sens: 15;
    --card-bg: linear-gradient(8deg, #023047 75%, color-mix(in srgb, #023047 97.5%, white) 75.5%);
    --glow-color: 45 80% 70%;

    position: relative;
    border-radius: 1.768em;
    isolation: isolate;
    transform: translate3d(0, 0, 0.01px);
    border: 1px solid rgb(255 255 255 / 25%);
    background: var(--card-bg);
    background-repeat: no-repeat;
    box-shadow:
      rgba(0, 0, 0, 0.1) 0px 1px 2px,
      rgba(0, 0, 0, 0.1) 0px 2px 4px,
      rgba(0, 0, 0, 0.1) 0px 4px 8px,
      rgba(0, 0, 0, 0.1) 0px 8px 16px,
      rgba(0, 0, 0, 0.1) 0px 16px 32px,
      rgba(0, 0, 0, 0.1) 0px 32px 64px;

    &::before,
    &::after,
    & > .glow-effect {
      content: "";
      position: absolute;
      inset: 0;
      border-radius: inherit;
      transition: opacity 0.25s ease-out;
      z-index: -1;
    }

    &:not(:hover):not(.glow-animating) {
      &::before,
      &::after,
      & > .glow-effect {
        opacity: 0;
        transition: opacity 0.75s ease-in-out;
      }
    }

    /* Mesh gradient border */
    &::before {
      border: 1px solid transparent;
      background:
        linear-gradient(var(--card-bg) 0 100%) padding-box,
        linear-gradient(rgb(255 255 255 / 0%) 0% 100%) border-box,
        radial-gradient(at 80% 55%, hsla(268,100%,76%,1) 0px, transparent 50%) border-box,
        radial-gradient(at 69% 34%, hsla(349,100%,74%,1) 0px, transparent 50%) border-box,
        radial-gradient(at 8% 6%, hsla(136,100%,78%,1) 0px, transparent 50%) border-box,
        radial-gradient(at 41% 38%, hsla(192,100%,64%,1) 0px, transparent 50%) border-box,
        radial-gradient(at 86% 85%, hsla(186,100%,74%,1) 0px, transparent 50%) border-box,
        radial-gradient(at 82% 18%, hsla(52,100%,65%,1) 0px, transparent 50%) border-box,
        radial-gradient(at 51% 4%, hsla(12,100%,72%,1) 0px, transparent 50%) border-box,
        linear-gradient(#c299ff 0 100%) border-box;

      opacity: calc((var(--pointer-distance) - var(--color-sens)) / (100 - var(--color-sens)));
      mask-image:
        conic-gradient(
          from var(--pointer-angle) at center, black 10%, transparent 25%, transparent 75%, black 90%
        );
    }

    /* Mesh gradient background */
    &::after {
      border: 1px solid transparent;
      background:
        radial-gradient(at 80% 55%, hsla(268,100%,76%,1) 0px, transparent 50%) padding-box,
        radial-gradient(at 69% 34%, hsla(349,100%,74%,1) 0px, transparent 50%) padding-box,
        radial-gradient(at 8% 6%, hsla(136,100%,78%,1) 0px, transparent 50%) padding-box,
        radial-gradient(at 41% 38%, hsla(192,100%,64%,1) 0px, transparent 50%) padding-box,
        radial-gradient(at 86% 85%, hsla(186,100%,74%,1) 0px, transparent 50%) padding-box,
        radial-gradient(at 82% 18%, hsla(52,100%,65%,1) 0px, transparent 50%) padding-box,
        radial-gradient(at 51% 4%, hsla(12,100%,72%,1) 0px, transparent 50%) padding-box,
        linear-gradient(#c299ff 0 100%) padding-box;

      mask-image:
        linear-gradient(to bottom, black, black),
        radial-gradient(ellipse at 50% 50%, black 40%, transparent 65%),
        radial-gradient(ellipse at 66% 66%, black 5%, transparent 40%),
        radial-gradient(ellipse at 33% 33%, black 5%, transparent 40%),
        radial-gradient(ellipse at 66% 33%, black 5%, transparent 40%),
        radial-gradient(ellipse at 33% 66%, black 5%, transparent 40%),
        conic-gradient(from var(--pointer-angle) at center, transparent 5%, black 15%, black 85%, transparent 95%);
      mask-composite: subtract, add, add, add, add, add;

      opacity: calc((var(--pointer-distance) - var(--color-sens)) / (100 - var(--color-sens)));
      mix-blend-mode: soft-light;
    }

    /* Glowing border edges */
    & > .glow-effect {
      --outset: 50px;
      inset: calc(var(--outset) * -1);
      pointer-events: none;
      z-index: 1;

      mask-image:
        conic-gradient(
          from var(--pointer-angle) at center, black 0%, transparent 8%, transparent 92%, black 100%
        );

      opacity: calc((var(--pointer-distance) - var(--glow-sens)) / (100 - var(--glow-sens)));
      mix-blend-mode: plus-lighter;

      &::before {
        content: "";
        position: absolute;
        inset: var(--outset);
        border-radius: inherit;

        /* Multiple colored glows - Enhanced */
        box-shadow:
          /* Purple glow */
          inset 0 0 0 2px hsl(268 100% 76% / 100%),
          inset 0 0 5px 0 hsl(268 100% 76% / 90%),
          inset 0 0 12px 0 hsl(268 100% 76% / 70%),
          inset 0 0 30px 0 hsl(268 100% 76% / 50%),
          0 0 5px 0 hsl(268 100% 76% / 90%),
          0 0 12px 0 hsl(268 100% 76% / 70%),
          0 0 30px 0 hsl(268 100% 76% / 50%),

          /* Pink glow */
          inset 0 0 0 2px hsl(349 100% 74% / 100%),
          inset 0 0 5px 0 hsl(349 100% 74% / 90%),
          inset 0 0 12px 0 hsl(349 100% 74% / 70%),
          inset 0 0 30px 0 hsl(349 100% 74% / 50%),
          0 0 5px 0 hsl(349 100% 74% / 90%),
          0 0 12px 0 hsl(349 100% 74% / 70%),
          0 0 30px 0 hsl(349 100% 74% / 50%),

          /* Cyan glow */
          inset 0 0 0 2px hsl(192 100% 64% / 100%),
          inset 0 0 5px 0 hsl(192 100% 64% / 90%),
          inset 0 0 12px 0 hsl(192 100% 64% / 70%),
          inset 0 0 30px 0 hsl(192 100% 64% / 50%),
          0 0 5px 0 hsl(192 100% 64% / 90%),
          0 0 12px 0 hsl(192 100% 64% / 70%),
          0 0 30px 0 hsl(192 100% 64% / 50%),

          /* Yellow glow */
          inset 0 0 0 2px hsl(52 100% 65% / 100%),
          inset 0 0 5px 0 hsl(52 100% 65% / 90%),
          inset 0 0 12px 0 hsl(52 100% 65% / 70%),
          inset 0 0 30px 0 hsl(52 100% 65% / 50%),
          0 0 5px 0 hsl(52 100% 65% / 90%),
          0 0 12px 0 hsl(52 100% 65% / 70%),
          0 0 30px 0 hsl(52 100% 65% / 50%),

          /* Green glow */
          inset 0 0 0 2px hsl(136 100% 78% / 100%),
          inset 0 0 5px 0 hsl(136 100% 78% / 90%),
          inset 0 0 12px 0 hsl(136 100% 78% / 70%),
          inset 0 0 30px 0 hsl(136 100% 78% / 50%),
          0 0 5px 0 hsl(136 100% 78% / 90%),
          0 0 12px 0 hsl(136 100% 78% / 70%),
          0 0 30px 0 hsl(136 100% 78% / 50%);
      }
    }
  }

  .glow-inner {
    position: relative;
    z-index: 1;
  }
}

/* Reduced motion preferences */
@media (prefers-reduced-motion: reduce) {

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}